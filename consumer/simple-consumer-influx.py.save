from confluent_kafka import Consumer, KafkaError
import numpy as np
import visdom
import signal
import threading
import os
from influxdb_client import InfluxDBClient, Dialect

token = os.environ['INFLUX_TOKEN']
bucket = "test-bucket"
org = "Insight"
url="http://10.0.0.12:9999"
client = InfluxDBClient(url,token=token

c = Consumer({
    'bootstrap.servers':'10.0.0.12:9090',
    'group.id':'basic',
    'auto.offset.reset':'earliest'
})
c.subscribe(['arraytest'])
t = np.arange(0,1000,1)/250-4
h = vis.line(X=t,Y=np.zeros(t.shape))
#sigbufs = np.zeros()
numchan = 10
lastd = np.zeros((numchan,1000))

while True:
	msg = c.poll()
	if msg is None:
		continue		
	if msg.error():    		
		print("Consumer error: {}".format(msg.error()))
	a = np.frombuffer(msg.value(),'double')   		
	print('received message: {} bytes'.format(a.shape))
	d = a.reshape((-1,250))
	
	#create line protocol 
	lp = "eeg ";
	points=list();
	for s in np.arange(d.shape[1]):
		p = Point("eeg")
		for c in np.arange(d.shape[0]):
			lp = lp + "{}={},".format(str(c),d[c,s])
			p.field(str(s),d[c,s])
		points.append(p)
		lp = lp + "\n"
	client.write(bucket,org

	
	
c.close()


